# Generated from asciiTable.elf
from MockProgram import *
# Data
data = (
  MockData(min_addr=MockAddress(0x400000), max_addr=MockAddress(0x400033)),
  MockData(min_addr=MockAddress(0x400034), max_addr=MockAddress(0x400093)),
  MockData(min_addr=MockAddress(0x4000b0), max_addr=MockAddress(0x4000c7)),
  MockData(min_addr=MockAddress(0x400490), max_addr=MockAddress(0x4004e7)),
  MockData(min_addr=MockAddress(0x4004f0), max_addr=MockAddress(0x4005f0)),
  MockData(min_addr=MockAddress(0x0), max_addr=MockAddress(0x20)),
  MockData(min_addr=MockAddress(0x0), max_addr=MockAddress(0x3)),
  MockData(min_addr=MockAddress(0x4), max_addr=MockAddress(0x7)),
  MockData(min_addr=MockAddress(0x8), max_addr=MockAddress(0x8)),
  MockData(min_addr=MockAddress(0x9), max_addr=MockAddress(0x9)),
  MockData(min_addr=MockAddress(0xa), max_addr=MockAddress(0xa)),
  MockData(min_addr=MockAddress(0xb), max_addr=MockAddress(0xb)),
  MockData(min_addr=MockAddress(0xc), max_addr=MockAddress(0xc)),
  MockData(min_addr=MockAddress(0xd), max_addr=MockAddress(0xf)),
  MockData(min_addr=MockAddress(0x10), max_addr=MockAddress(0x13)),
  MockData(min_addr=MockAddress(0x14), max_addr=MockAddress(0x17)),
  MockData(min_addr=MockAddress(0x18), max_addr=MockAddress(0x1b)),
  MockData(min_addr=MockAddress(0x1c), max_addr=MockAddress(0x1f)),
  MockData(min_addr=MockAddress(0x20), max_addr=MockAddress(0x37)),
  MockData(min_addr=MockAddress(0x38), max_addr=MockAddress(0x3b)),
  MockData(min_addr=MockAddress(0x3c), max_addr=MockAddress(0x3f)),
  MockData(min_addr=MockAddress(0x40), max_addr=MockAddress(0x43)),
  MockData(min_addr=MockAddress(0x44), max_addr=MockAddress(0x47)),
  MockData(min_addr=MockAddress(0x48), max_addr=MockAddress(0x5b)),
  MockData(min_addr=MockAddress(0x5c), max_addr=MockAddress(0x5f)),
  MockData(min_addr=MockAddress(0x60), max_addr=MockAddress(0x63)),
  MockData(min_addr=MockAddress(0x64), max_addr=MockAddress(0x64)),
  MockData(min_addr=MockAddress(0x65), max_addr=MockAddress(0x65)),
  MockData(min_addr=MockAddress(0x66), max_addr=MockAddress(0x66)),
  MockData(min_addr=MockAddress(0x67), max_addr=MockAddress(0x67)),
  MockData(min_addr=MockAddress(0x68), max_addr=MockAddress(0x68)),
  MockData(min_addr=MockAddress(0x69), max_addr=MockAddress(0x6b)),
  MockData(min_addr=MockAddress(0x6c), max_addr=MockAddress(0x6f)),
  MockData(min_addr=MockAddress(0x70), max_addr=MockAddress(0x73)),
  MockData(min_addr=MockAddress(0x74), max_addr=MockAddress(0x77)),
  MockData(min_addr=MockAddress(0x78), max_addr=MockAddress(0x7b)),
  MockData(min_addr=MockAddress(0x7c), max_addr=MockAddress(0x7f)),
  MockData(min_addr=MockAddress(0x80), max_addr=MockAddress(0x83)),
  MockData(min_addr=MockAddress(0x84), max_addr=MockAddress(0x87)),
  MockData(min_addr=MockAddress(0x88), max_addr=MockAddress(0x8b)),
  MockData(min_addr=MockAddress(0x8c), max_addr=MockAddress(0x8f)),
  MockData(min_addr=MockAddress(0x90), max_addr=MockAddress(0x93)),
  MockData(min_addr=MockAddress(0x94), max_addr=MockAddress(0x97)),
  MockData(min_addr=MockAddress(0x98), max_addr=MockAddress(0x9b)),
  MockData(min_addr=MockAddress(0x9c), max_addr=MockAddress(0x9f)),
  MockData(min_addr=MockAddress(0xa0), max_addr=MockAddress(0xa3)),
  MockData(min_addr=MockAddress(0xa4), max_addr=MockAddress(0xa7)),
  MockData(min_addr=MockAddress(0xa8), max_addr=MockAddress(0xab)),
  MockData(min_addr=MockAddress(0xac), max_addr=MockAddress(0xaf)),
  MockData(min_addr=MockAddress(0xb0), max_addr=MockAddress(0xb3)),
  MockData(min_addr=MockAddress(0xb4), max_addr=MockAddress(0xb7)),
  MockData(min_addr=MockAddress(0xb8), max_addr=MockAddress(0xbb)),
  MockData(min_addr=MockAddress(0xbc), max_addr=MockAddress(0xbf)),
  MockData(min_addr=MockAddress(0xc0), max_addr=MockAddress(0xc3)),
  MockData(min_addr=MockAddress(0xc4), max_addr=MockAddress(0xc7)),
  MockData(min_addr=MockAddress(0xc8), max_addr=MockAddress(0xcb)),
  MockData(min_addr=MockAddress(0xcc), max_addr=MockAddress(0xcf)),
  MockData(min_addr=MockAddress(0xd0), max_addr=MockAddress(0xd3)),
  MockData(min_addr=MockAddress(0xd4), max_addr=MockAddress(0xd7)),
  MockData(min_addr=MockAddress(0xd8), max_addr=MockAddress(0xdb)),
  MockData(min_addr=MockAddress(0xdc), max_addr=MockAddress(0xdf)),
  MockData(min_addr=MockAddress(0xe0), max_addr=MockAddress(0xe3)),
  MockData(min_addr=MockAddress(0xe4), max_addr=MockAddress(0xe7)),
  MockData(min_addr=MockAddress(0xe8), max_addr=MockAddress(0xeb)),
  MockData(min_addr=MockAddress(0xec), max_addr=MockAddress(0xef)),
  MockData(min_addr=MockAddress(0xf0), max_addr=MockAddress(0xf3)),
  MockData(min_addr=MockAddress(0xf4), max_addr=MockAddress(0xf7)),
  MockData(min_addr=MockAddress(0xf8), max_addr=MockAddress(0xfb)),
  MockData(min_addr=MockAddress(0xfc), max_addr=MockAddress(0xff)),
  MockData(min_addr=MockAddress(0x100), max_addr=MockAddress(0x103)),
  MockData(min_addr=MockAddress(0x104), max_addr=MockAddress(0x107)),
  MockData(min_addr=MockAddress(0x108), max_addr=MockAddress(0x10b)),
  MockData(min_addr=MockAddress(0x10c), max_addr=MockAddress(0x10f)),
  MockData(min_addr=MockAddress(0x110), max_addr=MockAddress(0x113)),
  MockData(min_addr=MockAddress(0x114), max_addr=MockAddress(0x117)),
  MockData(min_addr=MockAddress(0x118), max_addr=MockAddress(0x11b)),
  MockData(min_addr=MockAddress(0x0), max_addr=MockAddress(0xc)),
  MockData(min_addr=MockAddress(0x1), max_addr=MockAddress(0x8)),
  MockData(min_addr=MockAddress(0x9), max_addr=MockAddress(0x10)),
  MockData(min_addr=MockAddress(0x11), max_addr=MockAddress(0x1a)),
  MockData(min_addr=MockAddress(0x1b), max_addr=MockAddress(0x29)),
  MockData(min_addr=MockAddress(0x2a), max_addr=MockAddress(0x32)),
  MockData(min_addr=MockAddress(0x33), max_addr=MockAddress(0x38)),
  MockData(min_addr=MockAddress(0x39), max_addr=MockAddress(0x40)),
  MockData(min_addr=MockAddress(0x41), max_addr=MockAddress(0x49)),
  MockData(min_addr=MockAddress(0x4a), max_addr=MockAddress(0x4e)),
  MockData(min_addr=MockAddress(0x4f), max_addr=MockAddress(0x5d)),
  MockData(min_addr=MockAddress(0x5e), max_addr=MockAddress(0x69)),
  MockData(min_addr=MockAddress(0x6a), max_addr=MockAddress(0x77)),
  MockData(min_addr=MockAddress(0x78), max_addr=MockAddress(0x83)),
  MockData(min_addr=MockAddress(0x84), max_addr=MockAddress(0x90)),
  MockData(min_addr=MockAddress(0x91), max_addr=MockAddress(0x9b)),
  MockData(min_addr=MockAddress(0x9c), max_addr=MockAddress(0xa6)),
  MockData(min_addr=MockAddress(0xa7), max_addr=MockAddress(0xb4)),
  MockData(min_addr=MockAddress(0xb5), max_addr=MockAddress(0xc4)),
  MockData(min_addr=MockAddress(0xc5), max_addr=MockAddress(0xd2)),
  MockData(min_addr=MockAddress(0x1), max_addr=MockAddress(0x13)),
  MockData(min_addr=MockAddress(0x14), max_addr=MockAddress(0x21)),
  MockData(min_addr=MockAddress(0x22), max_addr=MockAddress(0x25)),
  MockData(min_addr=MockAddress(0x26), max_addr=MockAddress(0x38)),
  MockData(min_addr=MockAddress(0x39), max_addr=MockAddress(0x3f)),
  MockData(min_addr=MockAddress(0x40), max_addr=MockAddress(0x47)),
  MockData(min_addr=MockAddress(0x48), max_addr=MockAddress(0x4f)),
  MockData(min_addr=MockAddress(0x50), max_addr=MockAddress(0x57)),
  MockData(min_addr=MockAddress(0x58), max_addr=MockAddress(0x60)),
  MockData(min_addr=MockAddress(0x61), max_addr=MockAddress(0x68)),
  MockData(min_addr=MockAddress(0x69), max_addr=MockAddress(0x75)),
  MockData(min_addr=MockAddress(0x76), max_addr=MockAddress(0x7c)),
  MockData(min_addr=MockAddress(0x7d), max_addr=MockAddress(0x84)),
  MockData(min_addr=MockAddress(0x85), max_addr=MockAddress(0x8c)),
  MockData(min_addr=MockAddress(0x8d), max_addr=MockAddress(0x98)),
  MockData(min_addr=MockAddress(0x99), max_addr=MockAddress(0xa0)),
  MockData(min_addr=MockAddress(0xa1), max_addr=MockAddress(0xa8)),
  MockData(min_addr=MockAddress(0xa9), max_addr=MockAddress(0xb0)),
  MockData(min_addr=MockAddress(0xb1), max_addr=MockAddress(0xb8)),
  MockData(min_addr=MockAddress(0xb9), max_addr=MockAddress(0xbf)),
  MockData(min_addr=MockAddress(0xc0), max_addr=MockAddress(0xc4)),
  MockData(min_addr=MockAddress(0xc5), max_addr=MockAddress(0xcc)),
  MockData(min_addr=MockAddress(0xcd), max_addr=MockAddress(0xd4)),
  MockData(min_addr=MockAddress(0xd5), max_addr=MockAddress(0xda)),
  MockData(min_addr=MockAddress(0x0), max_addr=MockAddress(0x29f)),
  MockData(min_addr=MockAddress(0x0), max_addr=MockAddress(0x31f)),
)
# Functions
functions = (
  MockFunction(name='print_number', body=MockAddressSet(MockAddress(0x4000d0), MockAddress(0x40015b))),
  MockFunction(name='__start', body=MockAddressSet(MockAddress(0x40015c), MockAddress(0x400277))),
  MockFunction(name='isalnum', body=MockAddressSet(MockAddress(0x400280), MockAddress(0x4002af))),
  MockFunction(name='isalpha', body=MockAddressSet(MockAddress(0x4002b0), MockAddress(0x4002df))),
  MockFunction(name='iscntrl', body=MockAddressSet(MockAddress(0x4002e0), MockAddress(0x40030f))),
  MockFunction(name='isdigit', body=MockAddressSet(MockAddress(0x400310), MockAddress(0x40033f))),
  MockFunction(name='isgraph', body=MockAddressSet(MockAddress(0x400340), MockAddress(0x40036f))),
  MockFunction(name='islower', body=MockAddressSet(MockAddress(0x400370), MockAddress(0x40039f))),
  MockFunction(name='isprint', body=MockAddressSet(MockAddress(0x4003a0), MockAddress(0x4003cf))),
  MockFunction(name='ispunct', body=MockAddressSet(MockAddress(0x4003d0), MockAddress(0x4003ff))),
  MockFunction(name='isspace', body=MockAddressSet(MockAddress(0x400400), MockAddress(0x40042f))),
  MockFunction(name='isupper', body=MockAddressSet(MockAddress(0x400430), MockAddress(0x40045f))),
  MockFunction(name='isxdigit', body=MockAddressSet(MockAddress(0x400460), MockAddress(0x40048f))),
)
# Memory blocks
memory_blocks = (
  MockMemoryBlock(name='segment_2.1', address_range=MockAddressSet(MockAddress(0x400000), MockAddress(0x400097)).getFirstRange(), data=(127,69,76,70,1,1,1,0,0,0,0,0,0,0,0,0,2,0,8,0,1,0,0,0,92,1,64,0,52,0,0,0,-8,32,0,0,1,16,0,0,52,0,32,0,3,0,40,0,20,0,19,0,3,0,0,112,-104,0,0,0,-104,0,64,0,-104,0,64,0,24,0,0,0,24,0,0,0,4,0,0,0,8,0,0,0,0,0,0,112,-80,0,0,0,-80,0,64,0,-80,0,64,0,24,0,0,0,24,0,0,0,4,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,0,0,64,0,0,0,64,0,0,6,0,0,0,6,0,0,5,0,0,0,0,0,1,0,0,0,0,0)),
  MockMemoryBlock(name='.MIPS.abiflags', address_range=MockAddressSet(MockAddress(0x400098), MockAddress(0x4000af)).getFirstRange(), data=(0,0,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),
  MockMemoryBlock(name='.reginfo', address_range=MockAddressSet(MockAddress(0x4000b0), MockAddress(0x4000c7)).getFirstRange(), data=(116,0,127,-96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-123,65,0)),
  MockMemoryBlock(name='.text', address_range=MockAddressSet(MockAddress(0x4000d0), MockAddress(0x40048f)).getFirstRange(), data=(-24,-1,-67,39,48,0,2,36,37,40,-96,3,20,0,-77,-81,0,0,-94,-93,37,-104,-128,0,16,0,-78,-81,12,0,-79,-81,8,0,-80,-81,-92,15,2,36,1,0,4,36,1,0,6,36,12,0,0,0,6,0,16,36,8,0,17,36,-3,-1,18,36,7,16,19,2,26,0,81,0,1,0,4,36,37,40,-96,3,1,0,6,36,16,16,0,0,48,0,66,36,0,0,-94,-93,-92,15,2,36,12,0,0,0,-3,-1,16,38,-11,-1,18,22,7,16,19,2,20,0,-77,-113,16,0,-78,-113,12,0,-79,-113,8,0,-80,-113,8,0,-32,3,24,0,-67,39,-56,-1,-67,39,44,0,-75,-81,40,0,-76,-81,36,0,-77,-81,32,0,-78,-81,24,0,-80,-81,52,0,-65,-81,48,0,-74,-81,28,0,-79,-81,37,-128,0,0,32,0,18,36,64,0,21,60,10,0,20,36,-128,0,19,36,52,0,16,12,37,32,0,2,16,0,-78,-93,-92,15,2,36,1,0,4,36,16,0,-91,39,1,0,6,36,12,0,0,0,-48,0,16,12,37,32,0,2,42,0,64,16,0,0,0,0,16,0,-80,-93,-92,15,2,36,1,0,4,36,16,0,-91,39,1,0,6,36,12,0,0,0,-92,15,2,36,16,0,-78,-93,1,0,4,36,16,0,-91,39,1,0,6,36,12,0,0,0,-112,4,-79,38,88,0,54,38,0,0,34,-114,0,0,0,0,9,-8,64,0,37,32,0,2,24,0,64,16,0,0,0,0,4,0,34,-110,0,0,0,0,16,0,-94,-93,-92,15,2,36,1,0,4,36,16,0,-91,39,1,0,6,36,12,0,0,0,8,0,49,38,-16,-1,-47,22,-92,15,2,36,16,0,-76,-93,1,0,4,36,16,0,-91,39,1,0,6,36,12,0,0,0,1,0,16,38,-50,-1,19,22,-95,15,2,36,37,32,0,0,12,0,0,0,-41,-1,0,16,16,0,-78,-93,-21,-1,0,16,16,0,-78,-93,0,0,0,0,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,7,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,3,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,32,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,4,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,23,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,2,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-128,0,0,0,0,-105,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,16,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,8,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,1,0,66,48,8,0,-32,3,0,0,0,0,-1,-1,3,36,8,0,-125,16,37,16,0,0,64,0,2,60,-15,4,66,36,-1,0,-124,48,33,32,-126,0,0,0,-126,-112,0,0,0,0,68,0,66,48,8,0,-32,3,0,0,0,0)),
  MockMemoryBlock(name='.rodata', address_range=MockAddressSet(MockAddress(0x400490), MockAddress(0x4005ff)).getFirstRange(), data=(64,3,64,0,103,0,0,0,-96,3,64,0,112,0,0,0,-32,2,64,0,99,0,0,0,0,4,64,0,115,0,0,0,-48,3,64,0,33,0,0,0,-128,2,64,0,65,0,0,0,-80,2,64,0,97,0,0,0,16,3,64,0,100,0,0,0,96,4,64,0,120,0,0,0,48,4,64,0,85,0,0,0,112,3,64,0,108,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,40,40,40,40,40,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-120,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,4,4,4,4,4,4,4,4,4,16,16,16,16,16,16,16,65,65,65,65,65,65,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,16,16,16,16,16,16,66,66,66,66,66,66,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,16,16,16,16,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)),
)
# Symbols
symbols = (
  MockSymbol(name='Elf32_Phdr_ARRAY_00400034', fullName='Elf32_Phdr_ARRAY_00400034', address=MockAddress(0x400034), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x40001c), to_address=MockAddress(0x400034), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_00400098', fullName='DAT_00400098', address=MockAddress(0x400098), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x40003c), to_address=MockAddress(0x400098), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x34), to_address=MockAddress(0x400098), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='Elf32_RegInfo_MIPS_004000b0', fullName='Elf32_RegInfo_MIPS_004000b0', address=MockAddress(0x4000b0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x40005c), to_address=MockAddress(0x4000b0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x5c), to_address=MockAddress(0x4000b0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='print_number', fullName='print_number', address=MockAddress(0x4000d0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x84), to_address=MockAddress(0x4000d0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4000d0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x18), to_address=MockAddress(0x4000d0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400194), to_address=MockAddress(0x4000d0), isPrimary=True, operand_index=0,
      reftype=MockRefType('UNCONDITIONAL_CALL', isCall=True, isComputed=False, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400114', fullName='LAB_00400114', address=MockAddress(0x400114), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x40013c), to_address=MockAddress(0x400114), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='__start', fullName='__start', address=MockAddress(0x40015c), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x40015c), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400018), to_address=MockAddress(0x40015c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40), to_address=MockAddress(0x40015c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400194', fullName='LAB_00400194', address=MockAddress(0x400194), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400258), to_address=MockAddress(0x400194), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='LAB_004001c8', fullName='LAB_004001c8', address=MockAddress(0x4001c8), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400268), to_address=MockAddress(0x4001c8), isPrimary=True, operand_index=0,
      reftype=MockRefType('UNCONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_004001fc', fullName='LAB_004001fc', address=MockAddress(0x4001fc), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400238), to_address=MockAddress(0x4001fc), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400220', fullName='LAB_00400220', address=MockAddress(0x400220), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400270), to_address=MockAddress(0x400220), isPrimary=True, operand_index=0,
      reftype=MockRefType('UNCONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400268', fullName='LAB_00400268', address=MockAddress(0x400268), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4001bc), to_address=MockAddress(0x400268), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400270', fullName='LAB_00400270', address=MockAddress(0x400270), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x40020c), to_address=MockAddress(0x400270), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isalnum', fullName='isalnum', address=MockAddress(0x400280), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400280), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004b8), to_address=MockAddress(0x400280), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x74), to_address=MockAddress(0x400280), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_004002a8', fullName='LAB_004002a8', address=MockAddress(0x4002a8), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400284), to_address=MockAddress(0x4002a8), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isalpha', fullName='isalpha', address=MockAddress(0x4002b0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4002b0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004c0), to_address=MockAddress(0x4002b0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x84), to_address=MockAddress(0x4002b0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_004002d8', fullName='LAB_004002d8', address=MockAddress(0x4002d8), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4002b4), to_address=MockAddress(0x4002d8), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='iscntrl', fullName='iscntrl', address=MockAddress(0x4002e0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4002e0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004a0), to_address=MockAddress(0x4002e0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x94), to_address=MockAddress(0x4002e0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400308', fullName='LAB_00400308', address=MockAddress(0x400308), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4002e4), to_address=MockAddress(0x400308), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isdigit', fullName='isdigit', address=MockAddress(0x400310), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400310), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004c8), to_address=MockAddress(0x400310), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xa4), to_address=MockAddress(0x400310), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400338', fullName='LAB_00400338', address=MockAddress(0x400338), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400314), to_address=MockAddress(0x400338), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isgraph', fullName='isgraph', address=MockAddress(0x400340), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400340), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400490), to_address=MockAddress(0x400340), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xb4), to_address=MockAddress(0x400340), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4001b4), to_address=MockAddress(0x400340), isPrimary=True, operand_index=0,
      reftype=MockRefType('UNCONDITIONAL_CALL', isCall=True, isComputed=False, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400204), to_address=MockAddress(0x400340), isPrimary=True, operand_index=0,
      reftype=MockRefType('COMPUTED_CALL', isCall=True, isComputed=True, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400368', fullName='LAB_00400368', address=MockAddress(0x400368), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400344), to_address=MockAddress(0x400368), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='islower', fullName='islower', address=MockAddress(0x400370), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400370), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004e0), to_address=MockAddress(0x400370), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xc4), to_address=MockAddress(0x400370), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400398', fullName='LAB_00400398', address=MockAddress(0x400398), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400374), to_address=MockAddress(0x400398), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isprint', fullName='isprint', address=MockAddress(0x4003a0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4003a0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400498), to_address=MockAddress(0x4003a0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xd4), to_address=MockAddress(0x4003a0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x400204), to_address=MockAddress(0x4003a0), isPrimary=False, operand_index=0,
      reftype=MockRefType('COMPUTED_CALL', isCall=True, isComputed=True, isConditional=False, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_004003c8', fullName='LAB_004003c8', address=MockAddress(0x4003c8), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4003a4), to_address=MockAddress(0x4003c8), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='ispunct', fullName='ispunct', address=MockAddress(0x4003d0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4003d0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004b0), to_address=MockAddress(0x4003d0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xe4), to_address=MockAddress(0x4003d0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_004003f8', fullName='LAB_004003f8', address=MockAddress(0x4003f8), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4003d4), to_address=MockAddress(0x4003f8), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isspace', fullName='isspace', address=MockAddress(0x400400), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400400), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004a8), to_address=MockAddress(0x400400), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xf4), to_address=MockAddress(0x400400), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400428', fullName='LAB_00400428', address=MockAddress(0x400428), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400404), to_address=MockAddress(0x400428), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isupper', fullName='isupper', address=MockAddress(0x400430), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400430), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004d8), to_address=MockAddress(0x400430), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x104), to_address=MockAddress(0x400430), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400458', fullName='LAB_00400458', address=MockAddress(0x400458), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400434), to_address=MockAddress(0x400458), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='isxdigit', fullName='isxdigit', address=MockAddress(0x400460), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400460), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4004d0), to_address=MockAddress(0x400460), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x114), to_address=MockAddress(0x400460), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='LAB_00400488', fullName='LAB_00400488', address=MockAddress(0x400488), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400464), to_address=MockAddress(0x400488), isPrimary=True, operand_index=2,
      reftype=MockRefType('CONDITIONAL_JUMP', isCall=False, isComputed=False, isConditional=True, isData=False, isFallthrough=False, isFlow=True, isIndirect=False, isJump=True, isOverride=False, isRead=False, isTerminal=False, isUnConditional=False, isWrite=False)),
  )),
  MockSymbol(name='s_ascii_properties', fullName='s_ascii_properties', address=MockAddress(0x400490), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0xac), to_address=MockAddress(0x400490), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x400490), isPrimary=True, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4001fc), to_address=MockAddress(0x400490), isPrimary=True, operand_index=1,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='s_ascii_properties[0].flag', fullName='s_ascii_properties[0].flag', address=MockAddress(0x400494), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400214), to_address=MockAddress(0x400494), isPrimary=True, operand_index=1,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='s_ascii_properties[1].func', fullName='s_ascii_properties[1].func', address=MockAddress(0x400498), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4001fc), to_address=MockAddress(0x400498), isPrimary=False, operand_index=1,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='_ctype_', fullName='_ctype_', address=MockAddress(0x4004f0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x4004f0), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='_ctype_[1]', fullName='_ctype_[1]', address=MockAddress(0x4004f1), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x4002cc), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40032c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40038c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4003ec), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40044c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40029c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4002fc), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40035c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x4003bc), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40041c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x40047c), to_address=MockAddress(0x4004f1), isPrimary=True, operand_index=0,
      reftype=MockRefType('READ', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=True, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='_fdata', fullName='_fdata', address=MockAddress(0x410600), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x0), to_address=MockAddress(0x410600), isPrimary=False, operand_index=-1,
      reftype=MockRefType('EXTERNAL', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='__bss_start', fullName='__bss_start', address=MockAddress(0x410600), isGlobal=True, references=(
  )),
  MockSymbol(name='_edata', fullName='_edata', address=MockAddress(0x410600), isGlobal=True, references=(
  )),
  MockSymbol(name='_end', fullName='_end', address=MockAddress(0x410600), isGlobal=True, references=(
  )),
  MockSymbol(name='_fbss', fullName='_fbss', address=MockAddress(0x410600), isGlobal=True, references=(
  )),
  MockSymbol(name='_gp', fullName='_gp', address=MockAddress(0x4185f0), isGlobal=True, references=(
  )),
  MockSymbol(name='_mips_gp0_value', fullName='_mips_gp0_value', address=MockAddress(0x4185f0), isGlobal=True, references=(
  )),
  MockSymbol(name='s_GCC:_(crosstool-NG_1.24.0)_8.3.0_.comment__00000000', fullName='s_GCC:_(crosstool-NG_1.24.0)_8.3.0_.comment__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0xd4), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.debug_abbrev__00000000', fullName='DAT_.debug_abbrev__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x174), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.debug_aranges__00000000', fullName='DAT_.debug_aranges__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x124), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='cie_.debug_frame::00000000', fullName='cie_.debug_frame::00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x1c4), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x14), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x3c), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='fde_.debug_frame::00000010', fullName='fde_.debug_frame::00000010', address=MockAddress(0x10), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::00000038', fullName='fde_.debug_frame::00000038', address=MockAddress(0x38), isGlobal=True, references=(
  )),
  MockSymbol(name='cie_.debug_frame::0000005c', fullName='cie_.debug_frame::0000005c', address=MockAddress(0x5c), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x70), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x80), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x90), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xa0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xb0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xc0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xd0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xe0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0xf0), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x100), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
    MockReference(from_address=MockAddress(0x110), to_address=MockAddress(0x5c), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='fde_.debug_frame::0000006c', fullName='fde_.debug_frame::0000006c', address=MockAddress(0x6c), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::0000007c', fullName='fde_.debug_frame::0000007c', address=MockAddress(0x7c), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::0000008c', fullName='fde_.debug_frame::0000008c', address=MockAddress(0x8c), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::0000009c', fullName='fde_.debug_frame::0000009c', address=MockAddress(0x9c), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000ac', fullName='fde_.debug_frame::000000ac', address=MockAddress(0xac), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000bc', fullName='fde_.debug_frame::000000bc', address=MockAddress(0xbc), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000cc', fullName='fde_.debug_frame::000000cc', address=MockAddress(0xcc), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000dc', fullName='fde_.debug_frame::000000dc', address=MockAddress(0xdc), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000ec', fullName='fde_.debug_frame::000000ec', address=MockAddress(0xec), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::000000fc', fullName='fde_.debug_frame::000000fc', address=MockAddress(0xfc), isGlobal=True, references=(
  )),
  MockSymbol(name='fde_.debug_frame::0000010c', fullName='fde_.debug_frame::0000010c', address=MockAddress(0x10c), isGlobal=True, references=(
  )),
  MockSymbol(name='DAT_.debug_info__00000000', fullName='DAT_.debug_info__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x14c), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.debug_line__00000000', fullName='DAT_.debug_line__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x19c), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.debug_loc__00000000', fullName='DAT_.debug_loc__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x214), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.debug_ranges__00000000', fullName='DAT_.debug_ranges__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x23c), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='s_unsigned_int_.debug_str__00000000', fullName='s_unsigned_int_.debug_str__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x1ec), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.gnu.attributes__00000000', fullName='DAT_.gnu.attributes__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x264), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.pdr__00000000', fullName='DAT_.pdr__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0xfc), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.shstrtab__00000000', fullName='DAT_.shstrtab__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x304), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='DAT_.strtab__00000000', fullName='DAT_.strtab__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x2dc), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='Elf32_Sym_ARRAY_.symtab__00000000', fullName='Elf32_Sym_ARRAY_.symtab__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x2b4), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
  MockSymbol(name='Elf32_Shdr_ARRAY__elfSectionHeaders__00000000', fullName='Elf32_Shdr_ARRAY__elfSectionHeaders__00000000', address=MockAddress(0x0), isGlobal=True, references=(
    MockReference(from_address=MockAddress(0x400020), to_address=MockAddress(0x0), isPrimary=True, operand_index=0,
      reftype=MockRefType('DATA', isCall=False, isComputed=False, isConditional=False, isData=True, isFallthrough=False, isFlow=False, isIndirect=False, isJump=False, isOverride=False, isRead=False, isTerminal=False, isUnConditional=True, isWrite=False)),
  )),
)
currentProgram = MockProgram(data=data, functions=functions, memory_blocks=memory_blocks, symbols=symbols)
